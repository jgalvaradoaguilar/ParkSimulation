/*
 * ControlDeUsuariosUI.java
 *
 * Created on 11 de agosto de 2008, 4:30
 */

package mi.parque;
import javax.swing.*;

/**
 *
 * @author  owner
 */
public class ControlDeUsuariosUI extends javax.swing.JPanel {

    /** Creates new form ControlDeUsuariosUI */
    public ControlDeUsuariosUI() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        add_people_noria = new javax.swing.JButton();
        add_people_montania = new javax.swing.JButton();
        retirar_personas_noria = new javax.swing.JButton();
        retirar_personas_montania = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Control de usuarios", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        add_people_noria.setText("Añadir/quitar personas a la cola de la noria");
        add_people_noria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_people_noriaActionPerformed(evt);
            }
        });

        add_people_montania.setText("Añadir/quitar personas a la cola de la montaña rusa");
        add_people_montania.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_people_montaniaActionPerformed(evt);
            }
        });

        retirar_personas_noria.setText("Salida de personas en la noria");
        retirar_personas_noria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retirar_personas_noriaActionPerformed(evt);
            }
        });

        retirar_personas_montania.setText("Salida de personas en la montaña rusa");
        retirar_personas_montania.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retirar_personas_montaniaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(add_people_noria, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(add_people_montania, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE))
                .addContainerGap(27, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(87, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(retirar_personas_noria, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(retirar_personas_montania, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(74, 74, 74))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(add_people_noria)
                .addGap(18, 18, 18)
                .addComponent(add_people_montania)
                .addGap(18, 18, 18)
                .addComponent(retirar_personas_noria)
                .addGap(18, 18, 18)
                .addComponent(retirar_personas_montania)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

private void add_people_noriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_people_noriaActionPerformed
// TODO add your handling code here:
    ColasUI rec = new ColasUI();
    if(JOptionPane.showConfirmDialog(this, rec, "Introduzca datos",
    JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE)
    == JOptionPane.OK_OPTION) {
    //Recogida datos RELLENAR
    boolean aniadir=rec.aniadir();
    boolean quitar=rec.quitar();
    int cantidad_personas=rec.numero_personas();
    //Procesamos los datos recogidos
    int cola_anterior = ParqueUI.noria.cola;
    
    if (aniadir) {
        ParqueUI.noria.cola = cola_anterior+cantidad_personas;
        if (ParqueUI.noria.cola>150){
            ParqueUI.noria.cola=150;
        }
    }
    if (quitar){
        ParqueUI.noria.cola = cola_anterior-cantidad_personas;
        if (ParqueUI.noria.cola<0){
            ParqueUI.noria.cola = 0;
        }
    }
    
    ParqueUI.mi_consola.append("Hay " + ParqueUI.noria.cola + " personas en la cola de la noria\n");
    }
}//GEN-LAST:event_add_people_noriaActionPerformed

private void add_people_montaniaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_people_montaniaActionPerformed
// TODO add your handling code here:
    ColasUI rec = new ColasUI();
    if(JOptionPane.showConfirmDialog(this, rec, "Introduzca datos",
    JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE)
    == JOptionPane.OK_OPTION) {
    //Recogida datos RELLENAR
    boolean aniadir=rec.aniadir();
    boolean quitar=rec.quitar();
    int cantidad_personas=rec.numero_personas();
    //Procesamos los datos recogidos
    int cola_anterior = ParqueUI.montania.cola;
    
    if (aniadir) {
        ParqueUI.montania.cola = cola_anterior+cantidad_personas;
        if (ParqueUI.montania.cola>150){
            ParqueUI.montania.cola=150;
        }
    }
    if (quitar){
        ParqueUI.montania.cola = cola_anterior-cantidad_personas;
        if (ParqueUI.montania.cola<0){
            ParqueUI.montania.cola = 0;
        }
    }
    ParqueUI.mi_consola.append("Hay "+ParqueUI.montania.cola+" personas en la cola de la montaña rusa\n");
    
    }    
}//GEN-LAST:event_add_people_montaniaActionPerformed

private void retirar_personas_noriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retirar_personas_noriaActionPerformed
// TODO add your handling code here:
    SalidaAtraccionesUI rec = new SalidaAtraccionesUI();
    if(JOptionPane.showConfirmDialog(this, rec, "Introduzca datos",
    JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE)
    == JOptionPane.OK_OPTION) {
    //Recogida datos RELLENAR
    int cantidad_personas=rec.numero_personas_fuera();
    //Procesamos los datos recogidos
    int resultado = ParqueUI.torniquete_noria.personas_dentro() - cantidad_personas;
    if (resultado>=0){
        ParqueUI.torniquete_noria.personas_dentro = resultado;
    }
    else{
        ParqueUI.torniquete_noria.personas_dentro = 0;
    }
    ParqueUI.mi_consola.append("Hay " + ParqueUI.torniquete_noria.personas_dentro + " personas dentro de la noria\n");
    } 
}//GEN-LAST:event_retirar_personas_noriaActionPerformed

private void retirar_personas_montaniaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retirar_personas_montaniaActionPerformed
// TODO add your handling code here:
    SalidaAtraccionesUI rec = new SalidaAtraccionesUI();
    if(JOptionPane.showConfirmDialog(this, rec, "Introduzca datos",
    JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE)
    == JOptionPane.OK_OPTION) {
    //Recogida datos RELLENAR
    int cantidad_personas=rec.numero_personas_fuera();
    //Procesamos los datos recogidos
    int resultado = ParqueUI.torniquete_montania.personas_dentro() - cantidad_personas;
    if (resultado>=0){
        ParqueUI.torniquete_montania.personas_dentro = resultado;
    }
    else{
        ParqueUI.torniquete_montania.personas_dentro = 0;
    }
    ParqueUI.mi_consola.append("Hay " + ParqueUI.torniquete_montania.personas_dentro + " personas dentro de la montaña rusa\n");
    }    
}//GEN-LAST:event_retirar_personas_montaniaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_people_montania;
    private javax.swing.JButton add_people_noria;
    private javax.swing.JButton retirar_personas_montania;
    private javax.swing.JButton retirar_personas_noria;
    // End of variables declaration//GEN-END:variables

}